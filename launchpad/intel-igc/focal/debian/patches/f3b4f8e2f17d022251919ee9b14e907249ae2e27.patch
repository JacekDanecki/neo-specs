commit f3b4f8e2f17d022251919ee9b14e907249ae2e27
Author: Wenju He <wenju.he@intel.com>
Date:   Tue Dec 22 08:37:13 2020 +0800

    Extend llvm_shutdown to fix ManagedStatic memleak
    
    With the new patch, we donâ€™t need extra API call.

diff --git a/opencl-clang/CMakeLists.txt b/opencl-clang/CMakeLists.txt
index f8af11c..dc758fd 100644
--- a/opencl-clang/CMakeLists.txt
+++ b/opencl-clang/CMakeLists.txt
@@ -131,9 +131,6 @@ if(NOT USE_PREBUILT_LLVM)
                   ${LLVM_BASE_REVISION}
                   ${TARGET_BRANCH}
                   ret)
-    if(${ret})
-        add_definitions(-DAPPLIED_LLVM_PATCHES)
-    endif()
     apply_patches(${SPIRV_SOURCE_DIR}
                   ${CMAKE_CURRENT_SOURCE_DIR}/patches/spirv
                   ${SPIRV_BASE_REVISION}
diff --git a/opencl-clang/common_clang.cpp b/opencl-clang/common_clang.cpp
index bd4f263..32fa2d3 100644
--- a/opencl-clang/common_clang.cpp
+++ b/opencl-clang/common_clang.cpp
@@ -89,9 +89,6 @@ static llvm::ManagedStatic<llvm::sys::SmartMutex<true> > compileMutex;
 
 void CommonClangTerminate() {
   llvm::llvm_shutdown();
-#ifdef APPLIED_LLVM_PATCHES
-  llvm::deleteManagedStaticMutex();
-#endif
 }
 
 // This function mustn't be invoked from a static object constructor,
diff --git a/opencl-clang/patches/llvm/0001-Adding-llvm-deleteManagedStaticMutex.patch b/opencl-clang/patches/llvm/0001-Adding-llvm-deleteManagedStaticMutex.patch
deleted file mode 100644
index 1b7f6d3..0000000
--- a/opencl-clang/patches/llvm/0001-Adding-llvm-deleteManagedStaticMutex.patch
+++ /dev/null
@@ -1,46 +0,0 @@
-From be6aa9ff5151288aef2fc5022c4303a42f1690f9 Mon Sep 17 00:00:00 2001
-From: Viktoria Maksimova <viktoria.maksimova@intel.com>
-Date: Wed, 9 Sep 2020 10:46:17 +0800
-Subject: [PATCH] Adding llvm::deleteManagedStaticMutex
-
----
- llvm/include/llvm/Support/ManagedStatic.h | 8 ++++++++
- llvm/lib/Support/ManagedStatic.cpp        | 5 +++++
- 2 files changed, 13 insertions(+)
-
-diff --git a/llvm/include/llvm/Support/ManagedStatic.h b/llvm/include/llvm/Support/ManagedStatic.h
-index f2b41422f13..01049e72beb 100644
---- a/llvm/include/llvm/Support/ManagedStatic.h
-+++ b/llvm/include/llvm/Support/ManagedStatic.h
-@@ -113,6 +113,14 @@ public:
- /// llvm_shutdown - Deallocate and destroy all ManagedStatic variables.
- void llvm_shutdown();
- 
-+/// Purpose of this function is to free memory allocated for ManagedStaticMutex.
-+/// One might want to do that to avoid memory leaks in case LLVM is loaded as a
-+/// shared library (or dll) at runtime.
-+/// This function is not thread safe and should be called only if there are no
-+/// threads which are using the mutex now or will use the mutex in the future.
-+/// This means deleteManagedStaticMutex can be called only after llvm_shutdown.
-+void deleteManagedStaticMutex();
-+
- /// llvm_shutdown_obj - This is a simple helper class that calls
- /// llvm_shutdown() when it is destroyed.
- struct llvm_shutdown_obj {
-diff --git a/llvm/lib/Support/ManagedStatic.cpp b/llvm/lib/Support/ManagedStatic.cpp
-index 053493f72fb..c843fabbe81 100644
---- a/llvm/lib/Support/ManagedStatic.cpp
-+++ b/llvm/lib/Support/ManagedStatic.cpp
-@@ -81,3 +81,8 @@ void llvm::llvm_shutdown() {
-   while (StaticList)
-     StaticList->destroy();
- }
-+
-+void llvm::deleteManagedStaticMutex() {
-+  assert(StaticList == nullptr && "llvm_shutdown() must be called first!");
-+  delete ManagedStaticMutex;
-+}
-\ No newline at end of file
--- 
-2.18.1
-
diff --git a/opencl-clang/patches/llvm/0001-Memory-leak-fix-for-Managed-Static-Mutex.patch b/opencl-clang/patches/llvm/0001-Memory-leak-fix-for-Managed-Static-Mutex.patch
new file mode 100644
index 0000000..a5125c8
--- /dev/null
+++ b/opencl-clang/patches/llvm/0001-Memory-leak-fix-for-Managed-Static-Mutex.patch
@@ -0,0 +1,31 @@
+From c86c43b70e029b102543e8a85d269cbeb5c00279 Mon Sep 17 00:00:00 2001
+From: juanrod2 <>
+Date: Tue, 22 Dec 2020 08:33:08 +0800
+Subject: [PATCH] Memory leak fix for Managed Static Mutex
+
+Cleaning a mutex inside ManagedStatic llvm class.
+---
+ llvm/lib/Support/ManagedStatic.cpp | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
+
+diff --git a/llvm/lib/Support/ManagedStatic.cpp b/llvm/lib/Support/ManagedStatic.cpp
+index 053493f72fb5..6571580ccecf 100644
+--- a/llvm/lib/Support/ManagedStatic.cpp
++++ b/llvm/lib/Support/ManagedStatic.cpp
+@@ -76,8 +76,12 @@ void ManagedStaticBase::destroy() const {
+ 
+ /// llvm_shutdown - Deallocate and destroy all ManagedStatic variables.
+ void llvm::llvm_shutdown() {
+-  std::lock_guard<std::recursive_mutex> Lock(*getManagedStaticMutex());
++  getManagedStaticMutex()->lock();
+ 
+   while (StaticList)
+     StaticList->destroy();
++
++  getManagedStaticMutex()->unlock();
++  delete ManagedStaticMutex;
++  ManagedStaticMutex = nullptr;
+ }
+-- 
+2.29.2
+
